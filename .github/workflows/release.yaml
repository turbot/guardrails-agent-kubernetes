name: Build and Release

on:
  push:
    tags:
      - "v*"

env:
  # Any version upgrades should be done here
  OSQUERY_VERSION: 5.14.1
  KUBECTL_VERSION: 1.31.3
  EXTENSION_VERSION: 1.2.0

jobs:
  build_and_release:
    name: Build and Release
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Extract tagged Agent Docker Image version
        id: image-version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Debug - tag extraction
        run: echo "Using transformed tag ${{ steps.image-version.outputs.version }}"

      - name: Versions used for the build
        run: |
          echo "DOCKER_VERSION=${{ steps.image-version.outputs.version }}"
          echo "OSQUERY_VERSION=${{ env.OSQUERY_VERSION }}"
          echo "KUBECTL_VERSION=${{ env.KUBECTL_VERSION }}"
          echo "EXTENSION_VERSION=${{ env.EXTENSION_VERSION }}"

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push GitHub Container Registry
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: ./kubernetes/docker
          push: true
          platforms: linux/arm64,linux/amd64
          tags: |
            ghcr.io/turbot/guardrails-agent-kubernetes:${{ steps.image-version.outputs.version }}
            ghcr.io/turbot/guardrails-agent-kubernetes:latest
          build-args: |
            OSQUERY_VERSION=${{ env.OSQUERY_VERSION }}
            KUBECTL_VERSION=${{ env.KUBECTL_VERSION }}
            EXTENSION_VERSION=${{ env.EXTENSION_VERSION }}
